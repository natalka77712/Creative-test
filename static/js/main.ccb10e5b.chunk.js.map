{"version":3,"sources":["components/Flat/Flat.module.scss","components/Flats/Flats.module.scss","reportWebVitals.ts","api/flats-api.ts","components/Flat/flat-reducer.ts","store.ts","components/Flat/Flat.tsx","components/Flats/Flats.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","flatsAPI","get","id","isLike","patch","like","initialState","rootReducer","combineReducers","flats","state","action","type","map","flat","store","createStore","applyMiddleware","thunkMiddleware","window","Flat","props","attributes","relationships","address","title","rooms","street","house","room","first_name","last_name","middle_name","dispatch","useDispatch","setIsLike","res","setIsLikeAC","catch","error","console","log","setIsLikeTC","className","style","flatItem","src","img","flatDescription","agentInfo","postLike","onClick","Flats","useSelector","useState","isLoaded","setIsLoaded","useEffect","setTimeout","data","header","Grid","container","item","loader","CircularProgress","App","exact","path","render","textAlign","paddingTop","from","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,MAAQ,oBAAoB,gBAAkB,8BAA8B,UAAY,wBAAwB,SAAW,yB,mBCA/KD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,OAAS,sBAAsB,UAAY,2B,sHCa7EC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gCCPRQ,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,yBACTC,iBAAiB,IAIRC,EAAW,WAGhB,OADgBL,EAASM,IAAe,aAFnCD,EAAW,SAKVE,EAAYC,GAElB,OADgBR,EAASS,MAAT,mBAAsCF,GAAM,CAACG,KAAMF,KCXrEG,EAAgC,GCChCC,EAAcC,YAAgB,CAChCC,MDCuB,WAAkF,IAAjFC,EAAgF,uDAAvDJ,EAAcK,EAAyC,uCACxG,OAAQA,EAAOC,MACX,IAAK,cACD,OAAOF,EAAMG,KAAI,SAAAC,GAAI,OAAIA,EAAKZ,KAAOS,EAAOT,GAAnB,2BAA6BY,GAA7B,IAAmCT,KAAMM,EAAOR,SAAWW,KACxF,IAAK,YACD,OAAQH,EAAOF,MACnB,QACI,OAAOC,MCLNK,EAAQC,YAAYT,EAAaU,YAAgBC,MAM9DC,OAAOJ,MAAQA,E,qICCFK,EAAO,SAACC,GAA0B,IAAD,EAEIA,EAAMP,KAAzCQ,GAF+B,EAEnCpB,GAFmC,EAE/BoB,YAAYC,EAFmB,EAEnBA,cACFC,GAHqB,EAEJnB,KACNiB,EAAzBG,MAAyBH,EAAlBI,MAAkBJ,EAAXE,SACdG,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,MAAOC,EAAQL,EAARK,KAJoB,EAKqBN,EAAvDD,WAAcQ,EALoB,EAKpBA,WAAYC,EALQ,EAKRA,UAAWC,EALH,EAKGA,YAGvCC,EAAWC,cAEXC,EAAY,SAACjC,GAAD,OAAgB+B,EFUX,SAAC/B,EAAYC,GAAb,OAAiC,SAAC8B,GACzDjC,EAAmBE,EAAIC,GAClBd,MAAK,SAAC+C,GACHH,EApBe,SAAC/B,EAAYC,GAAb,MACtB,CAACS,KAAM,cAAeV,KAAIC,UAmBVkC,CAAYnC,EAAIC,OAE5BmC,OAAM,SAACC,GACJC,QAAQC,IAAI,0BEhBuBC,CAAYxC,GAAKmB,EAAMP,KAAKT,QAGvE,OAAO,sBAAKsC,UAAWC,IAAMC,SAAtB,UACH,qBAAKC,IAAKzB,EAAMP,KAAKiC,MACrB,oBAAIJ,UAAWC,IAAMnB,MAArB,SAA6BJ,EAAMP,KAAKQ,WAAWG,QACnD,sBAAKkB,UAAWC,IAAMI,gBAAtB,UACI,cAAC,IAAD,IACA,qEAAarB,EAAb,iCAA6BC,EAA7B,+DAAiDC,QAErD,sBAAKc,UAAWC,IAAMK,UAAtB,UACI,cAAC,IAAD,IACA,sEAAcnB,EAAd,aAA6BC,EAA7B,YAA0CC,QAE9C,sBAAKW,UAAWC,IAAMM,SAAtB,UACI,mHACA,8BAAM7B,EAAMP,KAAKT,KAAO,cAAC,IAAD,CAAc8C,QAAS,kBAAMhB,EAAUd,EAAMP,KAAKZ,OACxE,cAAC,IAAD,CAAoBiD,QAAS,kBAAMhB,EAAUd,EAAMP,KAAKZ,gB,mCChCzDkD,EAAQ,WACjB,IAAMnB,EAAWC,cACXzB,EAAQ4C,aAAyC,SAAC3C,GAAD,OAAWA,EAAMD,SAFjD,EAGS6C,oBAAS,GAHlB,mBAGhBC,EAHgB,KAGNC,EAHM,KAcvB,OARAC,qBAAU,WACNC,YAAW,WACPF,GAAY,KAEb,KACHvB,GHI0B,SAACA,GAC/BjC,IACKX,MAAK,SAAC+C,GACHH,EANP,CAAErB,KAAM,YAAaH,MAMM2B,EAAIuB,UAE3BrB,OAAM,SAACC,GACJC,QAAQC,IAAI,8BGTjB,IAEEc,EAID,gCACI,oBAAIZ,UAAWC,IAAMgB,OAArB,wVACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACnB,UAAWC,IAAMkB,UAAjC,SAEQrD,EAAMI,KAAI,SAAAC,GACN,OAAO,cAAC+C,EAAA,EAAD,CAAME,MAAI,EAAV,SACH,cAAC,EAAD,CAAMjD,KAAMA,KADOA,EAAKZ,YARrC,qBAAKyC,UAAWC,IAAMoB,OAAtB,SAA8B,cAACC,EAAA,EAAD,OCJ9BC,MAff,WAEI,OACI,cAAC,IAAD,UACI,qBAAKvB,UAAU,MAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAI,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,OAAQC,OAAQ,kBAAM,oBAAIzB,MAAO,CAAC0B,UAAW,SAAUC,WAAY,QAA7C,oCACzC,cAAC,IAAD,CAAUC,KAAM,IAAKC,GAAI,iBCH7CC,IAASL,OACL,cAAC,IAAMM,WAAP,UACI,cAAC,IAAD,CAAU5D,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGR6D,SAASC,eAAe,SAM5B3F,M","file":"static/js/main.ccb10e5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flatItem\":\"Flat_flatItem__piPaI\",\"title\":\"Flat_title__3HmHj\",\"flatDescription\":\"Flat_flatDescription__1ehDv\",\"agentInfo\":\"Flat_agentInfo__2kQGA\",\"postLike\":\"Flat_postLike__2hrkh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Flats_loader__UAeq3\",\"header\":\"Flats_header__3e2ev\",\"container\":\"Flats_container__38BUS\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3004/',\r\n    withCredentials: true\r\n})\r\n\r\n//api\r\nexport const flatsAPI = {\r\n    getFlats() {\r\n        const promise = instance.get<FlatsType>('response');\r\n        return promise\r\n    },\r\n    setIsLike(id: number, isLike: boolean) {\r\n        const promise = instance.patch<FlatsType>(`response/${id}`, {like: isLike});\r\n        return promise\r\n    },\r\n}\r\n\r\n//types\r\nexport type AddressType = {\r\n   city: string\r\n   street: string\r\n   house: string\r\n   room: string\r\n}\r\n\r\nexport type AttributesType = {\r\n    title: string\r\n    rooms: number\r\n    address: AddressType\r\n    area: number\r\n    unit: string\r\n}\r\n\r\nexport type RelationshipsType = {\r\n    type: string\r\n    id: number\r\n    attributes: {\r\n        first_name: string\r\n        last_name: string\r\n        middle_name: string\r\n    }\r\n}\r\n\r\nexport type FlatType = {\r\n    type: string\r\n    id: number\r\n    img?: string\r\n    attributes: AttributesType\r\n    relationships: RelationshipsType\r\n    like?: boolean\r\n}\r\n\r\nexport type FlatsType = Array<FlatType>\r\n","import { Dispatch } from 'redux';\r\nimport {flatsAPI, FlatsType, FlatType} from \"../../api/flats-api\";\r\n\r\nconst initialState: Array<FlatType> = []\r\n\r\n\r\nexport const flatReducer = (state: Array<FlatType> = initialState, action: ActionsType): Array<FlatType> => {\r\n    switch (action.type) {\r\n        case \"SET-IS-LIKE\":\r\n            return state.map(flat => flat.id === action.id ? { ...flat, like: action.isLike } : flat);\r\n        case \"SET-FLATS\":\r\n            return  action.flats;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLikeAC = (id: number, isLike: boolean) =>\r\n    ({type: 'SET-IS-LIKE', id, isLike} as const)\r\n\r\nexport const setFlatsAC = (flats:  FlatsType) =>\r\n    ({ type: 'SET-FLATS', flats } as const)\r\n\r\n//thunks\r\nexport const fetchFlatsTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    flatsAPI.getFlats()\r\n        .then((res)=>{\r\n            dispatch(setFlatsAC(res.data))\r\n        })\r\n        .catch((error) =>{\r\n            console.log('some error occured')\r\n        })\r\n}\r\n\r\nexport const setIsLikeTC = (id: number, isLike: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    flatsAPI.setIsLike(id, isLike)\r\n        .then((res)=>{\r\n            dispatch(setIsLikeAC(id, isLike))\r\n        })\r\n        .catch((error) =>{\r\n            console.log('some error occured')\r\n        })\r\n}\r\n\r\n//types\r\nexport type InitialStateType = {\r\n    flat: Array<FlatType>\r\n    like?: boolean\r\n}\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLikeAC>\r\n    | ReturnType<typeof setFlatsAC>\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {flatReducer} from \"./components/Flat/flat-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    flats: flatReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react'\r\nimport {FlatsType, FlatType} from \"../../api/flats-api\";\r\nimport {setIsLikeTC} from \"./flat-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport style from './Flat.module.scss'\r\n\r\nexport type CardPropsType = {\r\n    flat: FlatType\r\n}\r\n\r\nexport const Flat = (props: CardPropsType) => {\r\n\r\n    const {id, attributes, relationships, like} = props.flat;\r\n    const {title, rooms, address} = attributes;\r\n    const {street, house, room} = address;\r\n    const { attributes: { first_name, last_name, middle_name } } = relationships;\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setIsLike = (id: number) => dispatch(setIsLikeTC(id, !props.flat.like));\r\n\r\n\r\n    return <div className={style.flatItem}>\r\n        <img src={props.flat.img}/>\r\n        <h2 className={style.title}>{props.flat.attributes.title}</h2>\r\n        <div className={style.flatDescription}>\r\n            <HomeIcon/>\r\n            <p>{`Улица:${street},  Дом:${house},  Квартира:${room}`}</p>\r\n        </div>\r\n        <div className={style.agentInfo}>\r\n            <PersonIcon/>\r\n            <p>{`Агент: ${first_name}  ${last_name} ${middle_name}`}</p>\r\n        </div>\r\n        <div className={style.postLike}>\r\n            <span>Отметить жилье</span>\r\n            <div>{props.flat.like ? <FavoriteIcon onClick={() => setIsLike(props.flat.id)}/>\r\n            : <FavoriteBorderIcon onClick={() => setIsLike(props.flat.id)}/>}</div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {FlatsType, FlatType} from \"../../api/flats-api\";\r\nimport {Flat} from \"../Flat/Flat\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchFlatsTC} from \"../Flat/flat-reducer\";\r\nimport {CircularProgress, Grid, LinearProgress} from \"@material-ui/core\";\r\nimport {AppRootStateType} from \"../../store\";\r\nimport style from './Flats.module.scss'\r\n\r\n\r\nexport const Flats = () => {\r\n    const dispatch = useDispatch()\r\n    const flats = useSelector<AppRootStateType, FlatsType>((state) => state.flats)\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsLoaded(true)\r\n\r\n        }, 1000)\r\n        dispatch(fetchFlatsTC())\r\n    }, [])\r\n\r\n    if (!isLoaded) {\r\n        return <div className={style.loader}><CircularProgress/></div>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className={style.header}>Вашему вниманию представлены следующие объекты недвижимости:</h1>\r\n            <Grid container className={style.container}>\r\n                {\r\n                    flats.map(flat => {\r\n                        return <Grid item key={flat.id}>\r\n                            <Flat flat={flat}/>\r\n                        </Grid>\r\n                    })\r\n                }\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter, Switch, Route, Redirect, HashRouter} from \"react-router-dom\";\r\nimport {Container} from '@material-ui/core'\r\nimport {Flats} from \"./components/Flats/Flats\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route exact path={'/'} render={()=><Flats/>}/>\r\n                    <Route exact path={'/404'} render={() => <h1 style={{textAlign: 'center', paddingTop: '50px'}}>404: Page not found</h1>}/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './store';\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport {FlatType} from \"./api/flats-api\";\nimport {Flats} from \"./components/Flats/Flats\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}